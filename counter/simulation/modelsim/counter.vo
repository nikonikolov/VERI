// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "11/20/2015 11:23:07"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	clock,
	reset,
	enable,
	count);
input 	clock;
input 	reset;
input 	enable;
output 	[3:0] count;

// Design Ports Information
// count[0]	=>  Location: PIN_M8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[1]	=>  Location: PIN_M7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[2]	=>  Location: PIN_P5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[3]	=>  Location: PIN_U1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clock	=>  Location: PIN_G2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// enable	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("counter_v.sdo");
// synopsys translate_on

wire \count[0]~output_o ;
wire \count[1]~output_o ;
wire \count[2]~output_o ;
wire \count[3]~output_o ;
wire \clock~input_o ;
wire \clock~inputclkctrl_outclk ;
wire \reset~input_o ;
wire \count~0_combout ;
wire \enable~input_o ;
wire \count[0]~1_combout ;
wire \count[0]~reg0_q ;
wire \count~2_combout ;
wire \count[1]~reg0_q ;
wire \count~3_combout ;
wire \count[2]~reg0_q ;
wire \count~4_combout ;
wire \count~5_combout ;
wire \count[3]~reg0_q ;


// Location: IOOBUF_X0_Y7_N2
cycloneiii_io_obuf \count[0]~output (
	.i(\count[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N23
cycloneiii_io_obuf \count[1]~output (
	.i(\count[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N9
cycloneiii_io_obuf \count[2]~output (
	.i(\count[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[2]~output .bus_hold = "false";
defparam \count[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y9_N16
cycloneiii_io_obuf \count[3]~output (
	.i(\count[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[3]~output .bus_hold = "false";
defparam \count[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y14_N1
cycloneiii_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \clock~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clock~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clock~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clock~inputclkctrl .clock_type = "global clock";
defparam \clock~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N15
cycloneiii_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N8
cycloneiii_lcell_comb \count~0 (
// Equation(s):
// \count~0_combout  = (!\count[0]~reg0_q  & !\reset~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\count[0]~reg0_q ),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\count~0_combout ),
	.cout());
// synopsys translate_off
defparam \count~0 .lut_mask = 16'h000F;
defparam \count~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N1
cycloneiii_io_ibuf \enable~input (
	.i(enable),
	.ibar(gnd),
	.o(\enable~input_o ));
// synopsys translate_off
defparam \enable~input .bus_hold = "false";
defparam \enable~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N24
cycloneiii_lcell_comb \count[0]~1 (
// Equation(s):
// \count[0]~1_combout  = (\enable~input_o ) # (\reset~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\enable~input_o ),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\count[0]~1_combout ),
	.cout());
// synopsys translate_off
defparam \count[0]~1 .lut_mask = 16'hFFF0;
defparam \count[0]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N9
dffeas \count[0]~reg0 (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\count~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\count[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[0]~reg0 .is_wysiwyg = "true";
defparam \count[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N30
cycloneiii_lcell_comb \count~2 (
// Equation(s):
// \count~2_combout  = (!\reset~input_o  & (\count[1]~reg0_q  $ (\count[0]~reg0_q )))

	.dataa(\reset~input_o ),
	.datab(gnd),
	.datac(\count[1]~reg0_q ),
	.datad(\count[0]~reg0_q ),
	.cin(gnd),
	.combout(\count~2_combout ),
	.cout());
// synopsys translate_off
defparam \count~2 .lut_mask = 16'h0550;
defparam \count~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N31
dffeas \count[1]~reg0 (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\count~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\count[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[1]~reg0 .is_wysiwyg = "true";
defparam \count[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N12
cycloneiii_lcell_comb \count~3 (
// Equation(s):
// \count~3_combout  = (!\reset~input_o  & (\count[2]~reg0_q  $ (((\count[1]~reg0_q  & \count[0]~reg0_q )))))

	.dataa(\count[1]~reg0_q ),
	.datab(\reset~input_o ),
	.datac(\count[2]~reg0_q ),
	.datad(\count[0]~reg0_q ),
	.cin(gnd),
	.combout(\count~3_combout ),
	.cout());
// synopsys translate_off
defparam \count~3 .lut_mask = 16'h1230;
defparam \count~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N13
dffeas \count[2]~reg0 (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\count~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\count[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[2]~reg0 .is_wysiwyg = "true";
defparam \count[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N18
cycloneiii_lcell_comb \count~4 (
// Equation(s):
// \count~4_combout  = (!\count[2]~reg0_q ) # (!\count[0]~reg0_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\count[0]~reg0_q ),
	.datad(\count[2]~reg0_q ),
	.cin(gnd),
	.combout(\count~4_combout ),
	.cout());
// synopsys translate_off
defparam \count~4 .lut_mask = 16'h0FFF;
defparam \count~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N2
cycloneiii_lcell_comb \count~5 (
// Equation(s):
// \count~5_combout  = (!\reset~input_o  & (\count[3]~reg0_q  $ (((\count[1]~reg0_q  & !\count~4_combout )))))

	.dataa(\count[1]~reg0_q ),
	.datab(\reset~input_o ),
	.datac(\count[3]~reg0_q ),
	.datad(\count~4_combout ),
	.cin(gnd),
	.combout(\count~5_combout ),
	.cout());
// synopsys translate_off
defparam \count~5 .lut_mask = 16'h3012;
defparam \count~5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N3
dffeas \count[3]~reg0 (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\count~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\count[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[3]~reg0 .is_wysiwyg = "true";
defparam \count[3]~reg0 .power_up = "low";
// synopsys translate_on

assign count[0] = \count[0]~output_o ;

assign count[1] = \count[1]~output_o ;

assign count[2] = \count[2]~output_o ;

assign count[3] = \count[3]~output_o ;

endmodule
